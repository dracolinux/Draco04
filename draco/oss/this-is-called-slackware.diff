--- install.sh~	2008-02-28 13:53:19.000000000 +0100
+++ install.sh	2008-02-28 13:56:44.000000000 +0100
@@ -6,12 +6,14 @@
   OSSLIBDIR=/usr/lib/oss
 fi
 
+export LC_ALL=C
+
 cd $OSSLIBDIR/build
 
 rm -f $OSSLIBDIR/.cuckoo_installed
 
 # Check if we should use REGPARM or non-REGPARM modules
-if /usr/sbin/ossvermagic -r || /sbin/modinfo ext3|grep -q REGPARM
+if /usr/sbin/ossvermagic -r || /sbin/modinfo $(lsmod |awk 'NR==2 {print $1}') |grep -q REGPARM
 then
    REGPARM=REGPARM
    rm -rf $OSSLIBDIR/objects
@@ -42,66 +44,6 @@
 echo OSS build environment set up for $REGPARM kernels
 
 KERNELDIR=/lib/modules/`uname -r`/build
-UBUNTUPACKAGES=""
-
-OK=1
-echo
-
-if test "`which gcc 2>/dev/null` " = " "
-then
-  echo "    gcc"
-  UBUNTUPACKAGES="$UBUNTUPACKAGES gcc"
-  OK=0
-fi
-
-if test "`which make  2>/dev/null` " = " "
-then
-  echo "    make"
-  UBUNTUPACKAGES="$UBUNTUPACKAGES make"
-  OK=0
-fi
-
-if test "`which ld  2>/dev/null` " = " "
-then
-  echo "    binutils"
-  UBUNTUPACKAGES="$UBUNTUPACKAGES binutils"
-  OK=0
-fi
-
-if ! test -f /usr/include/stdio.h
-then
-  echo "    C library headers (glibc-devel or build-essential)"
-  OK=0
-  UBUNTUPACKAGES="$UBUNTUPACKAGES build-essentials"
-fi
-
-if test "$OK " = "0 "
-then
-  echo
-  echo 'Error: The above Linux package(s) seem to be missing from your system.'
-  echo '       Please install them and then try to install OSS again.'
-  echo
-  echo Please refer to the documentation of your Linux distribution if you
-  echo have problems with installing the packages.
-  echo
-
-  if grep -q Ubuntu /etc/issue # Ubuntu?
-  then
-    echo You can use the following commands to download and install all
-    echo required packages:
-    echo
-
-    for n in $UBUNTUPACKAGES
-    do
-	echo "  apt-get install $n"
-    done
-
-    exit 1
-  fi
-
-  exit 1
-fi
-
 
 if ! test -f $KERNELDIR/Makefile && ! test -f /lib/modules/`uname -r`/sources/Makefile
 then
@@ -116,36 +58,6 @@
   echo to the documentation of your Linux distribution if there are any
   echo difficulties in installing the kernel/driver development environment.
   echo
-
-  if grep -q 'Fedora Core release' /etc/issue
-  then
-	if uname -v|grep -q SMP	
-	then
-	  echo Assuming that you are using Fedora Core 5 or later
-	  echo "the right kernel source package (RPM) is probably called"
-	  echo kernel-smp-devel.
-	else
-	  echo Assuming that you are using Fedora Core 5 or later
-	  echo "the right kernel source package (RPM) is probably called"
-	  echo kernel-devel.
-	fi
-  else
-	echo For your Linux distribution the right kernel source package
-	echo might be kernel-source.
-  fi
-  echo
-
-  if grep -q Ubuntu /etc/issue || grep -q Debian /etc/issue # Ubuntu or Debian?
-  then
-	echo Under Ubuntu you may need to prepare the kernel environment
-	echo after downloading the kernel sources using
-	echo 
-	echo "  sudo apt-get install linux-headers-`uname -r`"
-        echo "  cd /usr/src/linux-headers-`uname -r`/"
-        echo "  sudo make prepare"
-        echo "  sudo make prepare scripts"
-	echo
-  fi
 fi
 
 if ! test -d /lib/modules/`uname -r`
@@ -255,38 +167,6 @@
    echo 
 fi
 
-if ! test -d /etc/init.d
-then
-  mkdir /etc/init.d
-fi
-
-rm -f /etc/init.d/oss /etc/rc.d/rc3.d/S89oss /etc/rc3.d/S89oss
-cp -f $OSSLIBDIR/etc/S89oss /etc/init.d/oss
-
-chmod 744 /etc/init.d/oss
-
-if test -x /sbin/chkconfig
-then
-  /sbin/chkconfig oss on        > /dev/null 2>&1
-else
- if test -x /usr/sbin/update-rc.d
- then
-   /usr/sbin/update-rc.d oss defaults > /dev/null 2>&1
- else
-  if test -d etc/rc.d/rc3.d
-  then
-    rm -f /etc/rc.d/rc3.d/S89oss
-    ln -s /etc/init.d/oss /etc/rc.d/rc3.d/S89oss
-  else
-    if test -d /etc/rc3.d
-    then
-      rm -f /etc/rc3.d/S89oss
-      ln -s /etc/init.d/oss /etc/rc3.d/S89oss
-    fi
-  fi
- fi
-fi
-
 # Install ALSA interface module (Cuckoo)
 #(cd $OSSLIBDIR/cuckoo && make clean) > /dev/null 2>&1
 #if (cd $OSSLIBDIR/cuckoo && make install) > $OSSLIBDIR/logs/cuckoo.log 2>&1
@@ -299,9 +179,9 @@
 
 rm -f `ls -l -d /dev/*|grep ^c|grep '    14, '|sed 's/.* //'`
 
-# Recompile libflashsupport.so if possible. Otherwise use the precompiled
-# version.
-(cd $OSSLIBDIR/lib;gcc -m32 -shared -fPIC -O2 -Wall -Werror -lssl flashsupport.c -o /usr/lib/libflashsupport.so) > /dev/null 2>&1
+# "Recompile libflashsupport.so if possible. Otherwise use the precompiled
+# version." NO, it's already done.
+#(cd $OSSLIBDIR/lib;gcc -m32 -shared -fPIC -O2 -Wall -Werror -lssl flashsupport.c -o /usr/lib/libflashsupport.so) > /dev/null 2>&1
 
 if test ! -f $OSSLIBDIR/etc/userdefs
 then
